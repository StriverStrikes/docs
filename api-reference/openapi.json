{
  "openapi": "3.0.1",
  "info": {
    "title": "Meeting Agent API",
    "description": "API for managing meeting agents, allowing them to join meetings with customizable configurations and fetch meeting data.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.amongst.ai/api/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/agent/join": {
      "post": {
        "description": "Joins a meeting with a customizable agent.",
        "requestBody": {
          "description": "Details of the meeting agent joining the session.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Agent successfully joined the meeting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access, invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/agent/meeting-data": {
      "get": {
        "description": "Fetches meeting data for a specific agent by agentId.",
        "parameters": [
          {
            "name": "agentId",
            "in": "query",
            "description": "The ID of the agent whose meeting data is being fetched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting data successfully fetched for the agent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or missing agentId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access, invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JoinRequest": {
        "type": "object",
        "properties": {
          "meetingUrl": {
            "type": "string",
            "description": "URL of the meeting the agent will join"
          },
          "agentName": {
            "type": "string",
            "description": "Name of the meeting agent"
          },
          "adhoc": {
            "type": "boolean",
            "description": "Indicates if the agent should join as an ad-hoc participant"
          },
          "automaticLeave": {
            "type": "object",
            "properties": {
              "EveryoneLeftTimeout": {
                "type": "integer",
                "description": "Time (in seconds) to wait before the agent leaves if everyone has left"
              },
              "NoOneJoinedTimeout": {
                "type": "integer",
                "description": "Time (in seconds) to wait before the agent leaves if no one has joined"
              },
              "WaitingRoomTimeout": {
                "type": "integer",
                "description": "Time (in seconds) to wait before the agent leaves if waiting in the room"
              }
            }
          },
          "webhookUrl": {
            "type": "string",
            "description": "Webhook URL to send meeting updates"
          },
          "metadata": {
            "type": "object",
            "description": "Custom metadata that can be included with the request",
            "additionalProperties": true
          }
        },
        "required": [
          "meetingUrl",
          "agentName",
          "adhoc"
        ]
      },
      "JoinResponse": {
        "type": "object",
        "properties": {
          "agentId": {
            "type": "string",
            "description": "Unique identifier of the agent that joined the meeting"
          }
        }
      },
      "MeetingDataResponse": {
        "type": "object",
        "properties": {
          "agentId": {
            "type": "string",
            "description": "The agentId"
          },
          "videoUrl": {
            "type": "string",
            "description": "The video url of the recording."
          },
          "transcription": {
            "type": "object",
            "description": "The transcription of the meeting."
          },
          "meetingUrl": {
            "type": "string",
            "description": "The URL of the meeting"
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Participant's name"
            },
            "description": "List of participants in the meeting"
          },
          "status": {
            "type": "string",
            "description": "Current status of the meeting (e.g., ongoing, completed)"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Start time of the meeting"
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "description": "End time of the meeting"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "description": "Error code"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": [
          "error",
          "message"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Use the format 'Token <actual token>' for authentication."
      }
    }
  }
}